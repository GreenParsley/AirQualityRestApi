// <auto-generated />
using System;
using AirQualityAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirQualityAPI.Migrations
{
    [DbContext(typeof(AirQualityDbContext))]
    partial class AirQualityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AirQualityAPI.Entities.Measures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NO2")
                        .HasColumnType("int");

                    b.Property<int>("NO2_PlumeAQI")
                        .HasColumnType("int");

                    b.Property<int>("PM1")
                        .HasColumnType("int");

                    b.Property<float>("PM10")
                        .HasColumnType("float");

                    b.Property<float>("PM10_PlumeAQI")
                        .HasColumnType("float");

                    b.Property<int>("PM1_PlumeAQI")
                        .HasColumnType("int");

                    b.Property<float>("PM2")
                        .HasColumnType("float");

                    b.Property<float>("PM2_PlumeAQI")
                        .HasColumnType("float");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.Property<int>("VOC")
                        .HasColumnType("int");

                    b.Property<int>("VOC_PlumeAQI")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("AirQualityAPI.Entities.Positions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Latitude")
                        .HasColumnType("float");

                    b.Property<float>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("AirQualityAPI.Entities.Trips", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Distance")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TripType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("AirQualityAPI.Entities.Measures", b =>
                {
                    b.HasOne("AirQualityAPI.Entities.Trips", "Trip")
                        .WithMany("Measures")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("AirQualityAPI.Entities.Positions", b =>
                {
                    b.HasOne("AirQualityAPI.Entities.Trips", "Trip")
                        .WithMany("Positions")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("AirQualityAPI.Entities.Trips", b =>
                {
                    b.Navigation("Measures");

                    b.Navigation("Positions");
                });
#pragma warning restore 612, 618
        }
    }
}
